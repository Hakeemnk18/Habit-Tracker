<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dynamic Habit Tracker</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels"></script>

    <style>
        :root {
            --primary-bg: #2b2b54;
            --nav-bg: #1a1a40;
            --chart-turquoise: #40E0D0;
            --chart-light-blue: #87CEEB;
            --chart-blue: #4169E1;
            --chart-purple: #9370DB;
            --text-yellow: #FFD700;
        }

        body {
            background-color: var(--primary-bg);
            color: white;
            min-height: 100vh;
        }

        .navbar {
            background: var(--nav-bg);
            padding: 1.5rem;
            margin-bottom: 2rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .navbar-brand {
            color: white;
            font-size: 2.5rem;
            font-weight: bold;
            padding: 0 1rem;
        }

        .main-content {
            padding: 2rem;
        }

        .habit-title {
            color: var(--text-yellow);
            font-size: 1.5rem;
            margin-bottom: 1rem;
        }

        .chart-container {
            background: white;
            border-radius: 10px;
            padding: 2rem;
            margin-bottom: 2rem;
            height: 400px; /* Increased height */
        }

        .add-habit-btn {
            background-color: #28a745;
            color: white;
            border: none;
            padding: 0.5rem 2rem;
            border-radius: 5px;
            margin-top: 1rem;
            float: right;
            margin-bottom: 10rem;
        }

        table {
            background: white;
            border-radius: 10px;
            padding: 1rem;
            width: 100%;
            color: black;
            height: 400px;
        }

        th, td {
            padding: 0.5rem;
            text-align: center;
        }
    </style>
</head>
<body>
    <!-- Navbar -->
    <nav class="navbar">
        <div class="container">
            <span class="navbar-brand">Habit Tracker</span>
        </div>
    </nav>

    <!-- Main Content -->
    <div class="container main-content">
        <div class="row">
            <!-- First Chart and Table -->
            <div class="col-md-6">
                <h2 class="habit-title">• Productive</h2>
                <div class="chart-container">
                    <canvas id="habitChart1"></canvas>
                </div>
                <table>
                    <thead>
                        <tr>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            
                        </tr>
                    </thead>
                    <tbody>
                        <% if(goodHabitList !== undefined && goodHabitList.length > 0){ %>
                            <% goodHabitList.forEach((item)=>{ %>
                                <tr>
                                    <td><%= item.name %></td>
                                    <td><%= item.days[0] %></td>
                                    <td><%= item.days[1] %></td>
                                    <td><%= item.days[2] %></td>
                                    <td><%= item.days[3] %></td>
                                    <td><%= item.days[4] %></td>
                                    
                                    <td><i class="fas fa-trash deleteIcon" data-id="<%= item._id %>" data-type="<%= item.type %>"></i></td>
                                    <td><a href="/editHabit?id=<%= item._id %>&type=<%= item.type %>" style="text-decoration: none;color: inherit;"><i class="fas fa-pen" title="Edit Habit"></i></a></i></td>
                                    <% if(item.status === 'active'){ %>
                                        <td><i class="fas fa-ban disableIcon" data-id="<%= item._id %>" data-type="<%= item.type %>"=""></i></td>
                                    <% }else{ %>
                                        <td><i class="fas fa-undo activateIcon" data-id="<%= item._id %>" data-type="<%= item.type %>"></i></td>
                                    <% } %>
                                    
                                    
                                </tr>
                            <% }) %>

                        <% } %>
                        
                    </tbody>
                </table>
            </div>

            <!-- Second Chart and Table -->
            <div class="col-md-6">
                <h2 class="habit-title">• Disruptive</h2>
                <div class="chart-container">
                    <canvas id="habitChart2"></canvas>
                </div>
                <table>
                    <thead>
                        <tr>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        <% if(badHabitList !== undefined && badHabitList.length > 0){ %>
                            <% badHabitList.forEach((item)=>{ %>
                                <tr>
                                    <td><%= item.name %></td>
                                    <td><%= item.days[0] %></td>
                                    <td><%= item.days[1] %></td>
                                    <td><%= item.days[2] %></td>
                                    <td><%= item.days[3] %></td>
                                    <td><%= item.days[4] %></td>
                                    <td><i class="fas fa-trash deleteIcon" data-id="<%= item._id %>" data-type="<%= item.type %>"></i></td>
                                    <td><a href="/editHabit?id=<%= item._id %>&type=<%= item.type %>" style="text-decoration: none;color: inherit;"><i class="fas fa-pen" title="Edit Habit"></i></a></i></td>
                                    <% if(item.status === 'active'){ %>
                                        <td><i class="fas fa-ban disableIcon" data-id="<%= item._id %>" data-type="<%= item.type %>"=""></i></td>
                                    <% }else{ %>
                                        <td><i class="fas fa-undo activateIcon" data-id="<%= item._id %>" data-type="<%= item.type %>"></i></td>
                                    <% } %>
                                </tr>
                            <% }) %>
                        <% } %>
                        
                        
                    </tbody>
                </table>
            </div>
        </div>
        <button class="add-habit-btn"><a href="/addHabit" style="text-decoration: none;color: inherit;">Add Habit</a></button>
    </div>
    <script>
        document.addEventListener("DOMContentLoaded",()=>{
            const activeIcon = document.querySelectorAll('.activateIcon')
            console.log("inside active event")

            activeIcon.forEach(icon =>{
                icon.addEventListener("click",async()=>{
                    const id = icon.getAttribute("data-id")
                    const type = icon.getAttribute("data-type")
                    console.log("type "+type)
                    console.log("id "+id)
                    try {
                        const response = await fetch("/active",{
                            method:"PUT",
                            headers:{
                                'Content-Type': 'application/json',
                            },
                            body:JSON.stringify({
                                id:id,
                                type:type
                            })
                        })

                        if(response.ok){
                            alert("habit is active")
                            window.location.reload()
                        }else{
                            alert("habit failed to active")
                        }
                    } catch (error) {
                        console.log("error in active fetch",error)
                        alert('An error occurred while active the habit.');
                    }
                })
                

                
            })
        })
    </script>
    <script>
        document.addEventListener("DOMContentLoaded",()=>{
            const disableIcon = document.querySelectorAll('.disableIcon')
            
            disableIcon.forEach(button =>{
                button.addEventListener("click",async(event)=>{
                    const id = button.getAttribute("data-id")
                    const type = button.getAttribute("data-type")

                    try {
                        const response = await fetch("/disable",{
                            method:"PUT",
                            headers:{
                                'Content-Type': 'application/json',
                            },
                            body:JSON.stringify({
                                id:id,
                                type:type
                            })
                        })

                        if(response.ok){
                            alert("habit is disabled")
                            window.location.reload()
                        }else{
                            alert("habit failed to disabled")
                        }
                    } catch (error) {
                        console.log("error in fetch delete habit ",error)
                        alert('An error occurred while desabled the habit.');
                    }
                })
            })
        })
    </script>
    <script>
        document.addEventListener("DOMContentLoaded",()=>{
            
            const deleteIcon = document.querySelectorAll(".deleteIcon")

            deleteIcon.forEach(icon => {
                icon.addEventListener("click",async(event)=>{
                    console.log("inside click")
                    const id = icon.getAttribute("data-id")
                    const type = icon.getAttribute("data-type")

                    const confirmDelete = window.confirm('Do you really want to delete this habit?');

                    if(confirmDelete){
                        try {
                            const response = await fetch(`/deleteHabit/${id}/${type}`,{
                                method:"DELETE",
                                headers:{
                                    'Content-Type': 'application/json',
                                }
                            })

                            if(response.ok){
                                alert("habit deleted successfully")
                                window.location.reload()
                            }else{
                                alert("habit failed to delete")
                            }
                        } catch (error) {
                            console.log("error in fetch delete habit ",error)
                            alert('An error occurred while deleting the habit.');
                        }
                    }

                })
            })
        })
    </script>

    <script>
        const badHabitData = <%- JSON.stringify(badHabit) %>;

        
        const badHabitNames = badHabitData.map(habit => habit.name);
        const badHabitCounts = badHabitData.map(habit => habit.count);
        

        const goodHabitData = <%- JSON.stringify(goodHabit) %>;
        const goodHabitNames = goodHabitData.map(habit => habit.name)
        const goodHabitCounts = goodHabitData.map(habit => habit.count)
        

        const badChartConfig = {
        type: 'bar',
        data: {
            labels: badHabitNames,
            datasets: [{
                data: badHabitCounts, // Example data
                backgroundColor: [
                    '#87CEEB',
                    '#40E0D0',
                    '#4169E1',
                    '#4169E1',
                    '#9370DB'
                ],
                borderRadius: 5,
                borderSkipped: false
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: { display: false },
                tooltip: { enabled: false },
                datalabels: {
                    anchor: 'end', // Place on top
                    align: 'end',  // Align top of bar
                    color: '#000',
                    font: {
                        weight: 'bold',
                        size: 14
                    },
                    padding: { top: 5 },
                    clip: false // Ensures labels stay visible outside the chart
                }
            },
            layout: {
                padding: {
                    top: 30 // Increase padding to make space for top labels
                }
            },
            scales: {
                x: {
                    grid: { display: false },
                    ticks: { color: '#000' }
                },
                y: {
                    // beginAtZero: true,
                    // ticks: { color: '#000' },
                    display:false

                }
            }
        },
        plugins: [ChartDataLabels] // Ensure this plugin is active
    };


    

    const goodChartConfig = {
        type: 'bar',
        data: {
            labels: goodHabitNames,
            datasets: [{
                data: goodHabitCounts, // Example data
                backgroundColor: [
                    '#87CEEB',
                    '#40E0D0',
                    '#4169E1',
                    '#4169E1',
                    '#9370DB'
                ],
                borderRadius: 5,
                borderSkipped: false
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: { display: false },
                tooltip: { enabled: false },
                datalabels: {
                    anchor: 'end', // Place on top
                    align: 'end',  // Align top of bar
                    color: '#000',
                    font: {
                        weight: 'bold',
                        size: 14
                    },
                    padding: { top: 5 },
                    clip: false // Ensures labels stay visible outside the chart
                }
            },
            layout: {
                padding: {
                    top: 30 // Increase padding to make space for top labels
                }
            },
            scales: {
                x: {
                    grid: { display: false },
                    ticks: { color: '#000' }
                },
                y: {
                    // beginAtZero: true,
                    // ticks: { color: '#000' },
                    display:false

                }
            }
        },
        plugins: [ChartDataLabels] // Ensure this plugin is active
    };
    new Chart(document.getElementById('habitChart1').getContext('2d'),goodChartConfig);
    new Chart(document.getElementById('habitChart2').getContext('2d'),badChartConfig );
    //<a href="/editHabit" style="text-decoration: none;color: inherit;"><i class="fas fa-pen"></i></a>

    </script>

   

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
